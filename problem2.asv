clear

%% b)
% choose u(x,y) = x^2/2
g_D = @(x,y) x^2/2;
a = @(x,y) 1;
f = @(x,y) -1;

h = 0.1;
g = Rectg(0,0,1,1); % unit square
[p,e,t] = initmesh(g,'hmax',h); % create mesh
e = e(1:2,:);
boundary_nodes = unique(e);
boundary_values = zeros(length(boundary_nodes), 1);
for i = 1:length(boundary_values)
    boundary_values(i) = g_D(p(1, boundary_nodes(i)), p(2, boundary_nodes(i)));
end

A = StiffnessAssembler2D(p, t, a);
b = LoadAssembler2D(p,t,f);

[A_00, b_1, remainingdofs] = LockDofs(A, b, boundary_nodes, boundary_values);

epsi_0 = A_00\b_1;
U = zeros(length(b));
U(remainingdofs) = epsi_0;
U(boundary_nodes) = boundary_values;

%% c)
f_analytic = @(x,y) x.^2/2;

pdesurf(p,t,U)
hold on

X = linspace(0,1, 1/h);
Y = linspace(0,1,1/h)';
Z = (X.^2/2 + Y.*0);
surf(X,Y,Z);

%% d)
h = [0.2, 0.1, 0.05, 0.025];
errors_l2 = zeros(length(h));
errors_energy = zeros(length(h));

for i = 1:length(h)
    errors_l2 = L2Error2D(p,t,f_analytic, U);
    % |||u||| = int_omega (x^2) 
    errors_energy = 
end
