function [U, p, e, t, A_tilde, b_tilde,D] = ElastiscityFEMSolver(p, e, t, f, gD, gN,E,nu,polygrad,Dirichlet_boundary_nodes)
    e = e(1:2,:);
    [mu,lambda] = Enu2Lame(E,nu);

    D = [lambda + 2*mu,lambda, 0;lambda, lambda + 2*mu,0;0,0,mu];
    BDAS = @(r,s) GetPhiB(r,s,polygrad);
    nbf = 3*polygrad;
    if nbf == 6
        [p,t] = ChangeP1toP2Mesh(p,t);
    end
    t(end,:)=[];

    boundary_values = zeros(length(Dirichlet_boundary_nodes), 2);
    for i = 1:length(boundary_values)
        boundary_values(i,:) = gD(p(1, Dirichlet_boundary_nodes(i)), p(2, Dirichlet_boundary_nodes(i)));
    end
    
    b = ElastiscityLoadVector2D(p,t,f,BDAS,nbf);
    %bn = ElastiscityNeumanLoadVector(p,e,gN,BDAS);

    A = ElastiscityAssembler2D(p,t,D,BDAS,nbf);

    A_tilde = A;
    b_tilde = b;

    dofs = zeros(length(Dirichlet_boundary_nodes) * 2, 1);
    dofs(1:2:end-1) = 2 * Dirichlet_boundary_nodes(1:2:end-1) - 1;
    [A_00, b_1, remainingdofs] = LockDofs(A_tilde, b_tilde, Dirichlet_boundary_nodes, boundary_values);

    epsi_0 = A_00\b_1;
    U = zeros(length(b), 1);
    U(remainingdofs) = epsi_0;
    U(Dirichlet_boundary_nodes) = boundary_values;

end